{"version":3,"sources":["components/Login/Login.module.css","components/common/Paginator/Paginator.module.css","api/api.ts","components/common/Preloader/Preloader.module.css","components/Users/users.module.css","assets/images/USER.png","api/profile-api.ts","redux/profile-reducer.ts","redux/dialogue-reducer.ts","assets/images/giphy.gif","components/Navbar/Navbar.module.css","serviceWorker.js","api/security-api.ts","components/Header/Header.tsx","api/auth-api.ts","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Music/Music.tsx","components/Music/MusicContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/News/NewsContainer.tsx","components/Settings/Settings.tsx","api/users-api.ts","utils/object-helpers.ts","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","hoc/withSuspense.tsx","redux/app-reducer.ts","redux/friends-bar-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControl.module.css","hoc/withAuthRedirect.tsx","components/Header/Header.module.css","utils/validators/validators.ts"],"names":["module","exports","form","input","checkbox","submitButton","captcha","selectedPage","__webpack_require__","d","__webpack_exports__","instance","ResultCodesEnum","ResultCodeForCaptcha","axios__WEBPACK_IMPORTED_MODULE_0__","n","axios","create","withCredentials","baseURL","headers","API-KEY","preCont","pre","userPhoto","main","p","profileAPI","userId","get","then","res","data","status","put","photoFile","formData","FormData","append","Content-Type","profile","initialState","posts","id","message","likesCount","newPostText","actions","addPost","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","arguments","getStatus","_ref2","_callee2","_context2","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","t0","_x3","savePhoto","file","_ref4","_callee4","_context4","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","Error","stopSubmit","_error","messages","abrupt","Promise","reject","_x5","_x6","profileReducer","state","length","undefined","action","newPost","objectSpread","concat","toConsumableArray","filter","dialoguesData","name","messagesData","createMessage","newMassageBody","dialogueReducer","body","E_INTITA_PRJ_REACT_start_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","E_INTITA_PRJ_REACT_start_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","navbar","item","active","Boolean","window","location","hostname","match","Header","props","react_default","createElement","className","s","header","alt","src","loginBlock","isAuth","login","logout","onClick","NavLink","to","authAPI","email","password","rememberMe","post","delete","securityAPI","isFetching","captchaUrl","payload","getAuthUserData","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","HeaderContainer","components_Header_Header","React","Component","connect","LoginReduxForm","reduxForm","handleSubmit","error","children","onSubmit","createField","required","Input","sform","formSummaryError","CaptchaIsRequired","Redirect","Music","Text_default","code","MusicContainer","components_Music_Music","compose","withAuthRedirect","key","Navbar","activeClassName","News","NewsContainer","components_News_News","Settings","usersAPI","getUsers","currentPage","pageSize","follow","unfollow","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","followingInProgress","usersActions","_followUnfollowToggle","apiMethod","actionCreator","usersReducer","followed","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","cn","defineProperty","pageNumber","e","User","user","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader","components_Users_Users","bind","_x7","_x8","page","totalCount","withSuspense","WrappedComponent","react","fallback","initialized","appReducer","friendsBarReducer","rootReducers","combineReducers","profilePage","dialoguesPage","friendsBar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","__store__","DialoguesContainer","lazy","ProfileContainer","SuspendedDialogues","SuspendedProfile","App","catchAllUnhandledErrors","document","title","initializeApp","addEventListener","removeEventListener","Header_HeaderContainer","components_Navbar_Navbar","Switch","Route","path","render","News_NewsContainer","Music_MusicContainer","components_Settings_Settings","Users_UsersContainer","components_Login_Login","exact","AppContainer","withRouter","promise","all","SocialApp","HashRouter","es","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","_ref$meta","meta","touched","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","Textarea","restProps","E_INTITA_PRJ_REACT_start_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1___default","_assets_images_giphy_gif__WEBPACK_IMPORTED_MODULE_2__","_assets_images_giphy_gif__WEBPACK_IMPORTED_MODULE_2___default","preloader","mapStateToPropsForRedirect","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","MaxLenghtCreator","value","maxLength"],"mappings":"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","file":"static/js/main.0269ecb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__1Otgr\",\"input\":\"Login_input__3J7m8\",\"checkbox\":\"Login_checkbox__2Otj8\",\"submitButton\":\"Login_submitButton__3RD7J\",\"captcha\":\"Login_captcha__1syvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2o8x0\"};","import { ProfileType, UserType } from './../types/types'\r\nimport axios, { AxiosResponse } from \"axios\"\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": '36b96517-179a-4aca-8588-54832599e6d7'\r\n    }\r\n})\r\n\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preCont\":\"Preloader_preCont__2UxB6\",\"pre\":\"Preloader_pre__2KZtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__350eH\",\"main\":\"users_main__1Mx0T\"};","module.exports = __webpack_public_path__ + \"static/media/USER.d6759143.png\";","import { SavePhotoResponseDataType } from './../redux/profile-reducer';\r\nimport { ProfileType, PhotosType } from './../types/types';\r\nimport { instance, ResponseType } from './api';\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType>(`profile/status`, { status: status }).then(res => res.data) //update status on server from taken user status\r\n    },\r\n    savePhotos(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<ResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n}","import { InferActionsTypes, BasicThunkType } from './redux-store';\r\nimport { PostType, ProfileType, PhotosType } from './../types/types'\r\nimport { profileAPI } from \"../api/profile-api\"\r\nimport { stopSubmit, FormAction } from \"redux-form\"\r\n\r\nexport type SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 0, message: \"Message\", likesCount: 0 },\r\n        { id: 1, message: \"Todo\", likesCount: 55 }\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/PROFILE/ADD-POST':\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n\r\n        case 'SN/PROFILE/SET-USER-PROFILE':\r\n            return { ...state, profile: action.profile }\r\n        case 'SN/PROFILE/SET-STATUS':\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case 'SN/PROFILE/DELETE-POST':\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n\r\n        case 'SN/PROFILE/SAVE-PHOTO-SUCCESS':\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } as ProfileType }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({ type: 'SN/PROFILE/ADD-POST', newPostText } as const),\r\n\r\n    setUserProfile: (profile: ProfileType) => ({ type: 'SN/PROFILE/SET-USER-PROFILE', profile } as const),\r\n\r\n    setStatus: (status: string) => ({ type: 'SN/PROFILE/SET-STATUS', status } as const),\r\n\r\n    deletePost: (postId: number) => ({ type: 'SN/PROFILE/DELETE-POST', postId } as const),\r\n\r\n    savePhotoSuccess: (photos: PhotosType) => ({ type: 'SN/PROFILE/SAVE-PHOTO-SUCCESS', photos } as const),\r\n\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId)\r\n\r\n    dispatch(actions.setUserProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actions.setStatus(status))\r\n        }\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhotos(file)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n    // alert(response.data)\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(`userId can't be null`)\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nexport type InitialStateType = typeof initialState\r\ntype ThunkType = BasicThunkType<ActionsType | FormAction>\r\n\r\nexport default profileReducer\r\n","import { DialogueType, MessageType } from './../types/types';\r\nimport { InferActionsTypes } from './redux-store';\r\n\r\nlet initialState = {\r\n    dialoguesData: [\r\n        { id: 0, name: 'Todo' },\r\n        { id: 1, name: 'Messages' }\r\n        // { id: 0, name: \"dimych\" },\r\n        // { id: 1, name: \"Sveta\" },\r\n        // { id: 2, name: \"Dania\" },\r\n        // { id: 3, name: \"Diana\" },\r\n        // { id: 4, name: \"Velar\" }\r\n    ] as Array<DialogueType>,\r\n    messagesData: [\r\n        { id: 0, message: \"1\" },\r\n        { id: 1, message: \"2\" },\r\n        { id: 2, message: \"3\" },\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    createMessage: (newMassageBody: string) => ({ type: 'SN/DIALOGUES/CREATE-MESSAGE', newMassageBody } as const)\r\n}\r\n\r\n\r\nconst dialogueReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SN/DIALOGUES/CREATE-MESSAGE':\r\n            let body = action.newMassageBody\r\n\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 0, message: body }],\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default dialogueReducer","module.exports = __webpack_public_path__ + \"static/media/giphy.1701e2f4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2kjcl\",\"item\":\"Navbar_item__28tdK\",\"active\":\"Navbar_active__1IpNw\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { instance } from \"./api\"\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport type MapPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport type DispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                alt=\"\"\r\n                src=\"https://about.canva.com/en_in/wp-content/uploads/sites/3/2016/08/logos-1.png\"\r\n            />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? (\r\n                    <div>\r\n                        {props.login}{' '}\r\n                        <button className={s.logout} onClick={props.logout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <NavLink to={'/login'}>\r\n                        <button className={s.login}>Login</button>\r\n                    </NavLink>\r\n                )}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { ResultCodesEnum, ResultCodeForCaptcha } from './security-api';\r\nimport { ResponseType, instance } from './api';\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<ResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<ResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptcha>>(`auth/login`, { email, password, rememberMe, captcha }).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(res => res.data)\r\n    }\r\n}\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}","import { ResultCodeForCaptcha, ResultCodesEnum } from './../api/api'\r\nimport { stopSubmit, ActionTypes } from 'redux-form'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { securityAPI } from '../api/security-api'\r\nimport { BasicThunkType, InferActionsTypes } from './redux-store'\r\nimport { Action } from 'redux'\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    isAuth: false,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isFetching: true,\r\n    captchaUrl: null as string | null //if null - captcha is not required\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/auth/SET-AUTH-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case 'SN/security/GET-CAPTCHA-URL-SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (\r\n        userId: number | null,\r\n        email: string | null,\r\n        login: string | null,\r\n        isAuth: boolean) => ({\r\n            type: 'SN/auth/SET-AUTH-USER-DATA',\r\n            payload: { userId, email, login, isAuth }\r\n        } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/security/GET-CAPTCHA-URL-SUCCESS',\r\n        payload: { captchaUrl }\r\n    } as const)\r\n}\r\n\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me()\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        //if we ARE authorised we set isAuth = true\r\n        let { id, login, email } = meData.data\r\n        dispatch(actions.setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string): ThunkType => async (dispatch) => {\r\n        let data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (data.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n                //if server data with resultCode 10 we need to request captchaUrl\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message =\r\n                data.messages.length > 0\r\n                    ? data.messages[0]\r\n                    : 'Some error'\r\n            dispatch(stopSubmit('login', { _error: message }))\r\n        }\r\n    }\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport type InitialStateType = typeof initialState                              // IS\r\ntype ThunkType = BasicThunkType<ActionsType | ReturnType<typeof stopSubmit>>    // thunk\r\ntype ActionsType = InferActionsTypes<typeof actions>                            // actions\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport Header, { MapPropsType, DispatchPropsType } from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/auth-reducer'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\nclass HeaderContainer extends React.Component<\r\n    MapPropsType & DispatchPropsType\r\n> {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    logout: () => {},\r\n})\r\n\r\nexport default connect<MapPropsType, DispatchPropsType, {}, AppStateType>(\r\n    mapStateToProps,\r\n    { logout }\r\n)(HeaderContainer)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { required } from '../../utils/validators/validators'\r\nimport sform from '../common/FormsControls/FormsControl.module.css'\r\nimport {\r\n    createField,\r\n    Input,\r\n    GetStringKeys,\r\n} from '../common/FormsControls/FormsControls'\r\nimport s from './Login.module.css'\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<\r\n    LoginFormValuesType,\r\n    LoginFormOwnProps\r\n> &\r\n    LoginFormOwnProps> = ({ handleSubmit, error, captchaUrl, children }) => {\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\r\n                'Email',\r\n                'email',\r\n                [required],\r\n                Input\r\n            )}\r\n            <br />\r\n            {createField<LoginFormValuesTypeKeys>(\r\n                'Password',\r\n                'password',\r\n                [required],\r\n                Input,\r\n                {\r\n                    type: 'password',\r\n                }\r\n            )}\r\n            {/* {createField<LoginFormValuesTypeKeys>(\r\n                undefined,\r\n                'rememberMe',\r\n                [],\r\n                Input,\r\n                { type: 'checkbox' },\r\n                'remember me'\r\n            )} */}\r\n\r\n            {captchaUrl && (\r\n                <img alt=\"\" className={s.captcha} src={captchaUrl} />\r\n            )}\r\n            <div>\r\n                {error && <div className={sform.formSummaryError}>{error}</div>}\r\n                {captchaUrl &&\r\n                    createField<LoginFormValuesTypeKeys>(\r\n                        'Symbols from image',\r\n                        'captcha',\r\n                        [required],\r\n                        Input,\r\n                        {}\r\n                    )}\r\n            </div>\r\n            <div>\r\n                <button className={s.submitButton}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\ntype MapStateToPropsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (\r\n        email: string,\r\n        password: string,\r\n        rememberMe: boolean,\r\n        captcha: string\r\n    ) => void\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(\r\n            formData.email,\r\n            formData.password,\r\n            formData.rememberMe,\r\n            formData.captcha\r\n        )\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import React from 'react'\r\nimport s from './Music.module.css'\r\nimport Text from 'antd/lib/typography/Text'\r\n\r\nconst Music: React.FC<any> = () => {\r\n    return <Text code>In Progress</Text>\r\n}\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport s from './Music.module.css'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { connect } from 'react-redux'\r\nimport Music from './Music'\r\n\r\nclass MusicContainer extends React.Component {\r\n    render() {\r\n        return <Music />\r\n    }\r\n}\r\n// todo: fix\r\nlet mapStateToProps = (userId: any) => ({\r\n    key: userId,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {})\r\n)(MusicContainer)\r\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar: React.FC = (props) => {\r\n    return (\r\n        <nav className={s.navbar}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogues\" activeClassName={s.active}>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            {/* <div className={s.item}>\r\n                <NavLink to=\"/News\" activeClassName={s.active}>\r\n                    News\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Music\" activeClassName={s.active}>\r\n                    Music\r\n                </NavLink>\r\n            </div> */}\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>\r\n                    Settings\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport s from './News.module.css'\r\nimport Text from 'antd/lib/typography/Text'\r\n\r\nconst News: React.FC<any> = () => {\r\n    return <Text code>In Progress</Text>\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport s from './News.module.css'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { connect } from 'react-redux'\r\nimport News from './News'\r\n\r\nclass NewsContainer extends React.Component<any> {\r\n    render() {\r\n        return <News />\r\n    }\r\n}\r\n// todo: fix\r\nlet mapStateToProps = (userId: any) => ({\r\n    key: userId,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { withAuthRedirect })\r\n)(NewsContainer)\r\n","import React from 'react'\r\nimport Text from 'antd/lib/typography/Text'\r\n\r\nconst Settings: React.FC<any> = (props) => {\r\n    return <Text code>In Progress</Text>\r\n}\r\n\r\nexport default Settings\r\n","import { ResponseType, GetItemsType, instance } from './api'\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`).then(res => { return res.data })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<ResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<ResponseType>\r\n    }\r\n}","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {           //return array if it\r\n        if (u[objPropName] === itemId) {    //see identity of name of 'u' and iteId\r\n            return { ...u, ...newObjProps } //replace old properties with new newObjProps\r\n        }\r\n        return u;\r\n    })\r\n}","import { Dispatch } from 'react'\r\nimport { usersAPI } from '../api/users-api'\r\nimport { updateObjectInArray } from \"../utils/object-helpers\"\r\nimport { UserType } from './../types/types'\r\nimport { BasicThunkType, InferActionsTypes } from './redux-store'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number> //array of users ids   \r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case 'SN/USERS/SET_USERS_TOTAL_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const usersActions = {\r\n    followSuccess: (userId: number) => ({ type: 'SN/USERS/FOLLOW', userId } as const),\r\n    unfollowSuccess: (userId: number) => ({ type: 'SN/USERS/UNFOLLOW', userId } as const),\r\n    setUsers: (users: Array<UserType>) => ({ type: 'SN/USERS/SET_USERS', users } as const),\r\n    setCurrentPage: (currentPage: number) => ({ type: 'SN/USERS/SET_CURRENT_PAGE', currentPage } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({ type: 'SN/USERS/SET_USERS_TOTAL_COUNT', totalUsersCount } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({ type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({ type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(usersActions.setCurrentPage(page))\r\n        dispatch(usersActions.toggleIsFetching(true))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(usersActions.toggleIsFetching(false))\r\n        dispatch(usersActions.setUsers(data.items))\r\n        dispatch(usersActions.setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst _followUnfollowToggle = async (dispatch: any, userId: number, apiMethod: any, actionCreator: (userId: number) => ActionsTypes) => {\r\n\r\n    dispatch(usersActions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(usersActions.toggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch: Dispatch<ActionsTypes>) => {\r\n        _followUnfollowToggle(dispatch, userId, usersAPI.follow.bind(usersAPI), usersActions.followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch: Dispatch<ActionsTypes>) => {\r\n        _followUnfollowToggle(dispatch, userId, usersAPI.unfollow.bind(usersAPI), usersActions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof usersActions>\r\ntype ThunkType = BasicThunkType<ActionsTypes>\r\n\r\nexport default usersReducer","import React, { useState } from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({\r\n    totalItemsCount,\r\n    pageSize,\r\n    currentPage,\r\n    onPageChanged,\r\n    portionSize = 10,\r\n}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: Array<number> = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}\r\n                >\r\n                    PREV\r\n                </button>\r\n            )}\r\n\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            className={cn(\r\n                                {\r\n                                    [styles.selectedPage]: currentPage === p,\r\n                                },\r\n                                styles.pageNumber\r\n                            )}\r\n                            key={p}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p)\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    )\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}\r\n                >\r\n                    NEXT\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport s from './users.module.css'\r\nimport userPhoto from '../../assets/images/USER.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../types/types'\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({\r\n    user,\r\n    followingInProgress,\r\n    unfollow,\r\n    follow,\r\n}) => {\r\n    return (\r\n        <div className={s.main}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img\r\n                        src={\r\n                            user.photos.small != null\r\n                                ? user.photos.small\r\n                                : userPhoto\r\n                        }\r\n                        className={s.userPhoto}\r\n                        alt=\"\"\r\n                    />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                {user.followed ? (\r\n                    <button\r\n                        disabled={followingInProgress.some(\r\n                            (id) => id === user.id\r\n                        )}\r\n                        onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}\r\n                    >\r\n                        Unfollow\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        disabled={followingInProgress.some(\r\n                            (id) => id === user.id\r\n                        )}\r\n                        onClick={() => {\r\n                            follow(user.id)\r\n                        }}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\nimport { UserType } from '../../types/types'\r\n\r\ntype UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<UsersType> = ({\r\n    currentPage,\r\n    totalUsersCount,\r\n    pageSize,\r\n    onPageChanged,\r\n    users,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n            />\r\n            <div>\r\n                {users.map((u) => (\r\n                    <User\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        key={u.id}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import { AppStateType } from './redux-store'\r\nimport { createSelector } from \"reselect\"\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { follow, unfollow, requestUsers } from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { compose } from 'redux'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../redux/users-selectors'\r\nimport { UserType } from '../../types/types'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageNumber: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype OwnProps = {}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType & OwnProps\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const { pageSize } = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnProps, AppStateType>(\r\n        mapStateToProps,\r\n        { follow, unfollow, getUsers: requestUsers }\r\n    )\r\n)(UsersContainer)\r\n","import React, { Suspense } from 'react'\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return (\r\n            <Suspense fallback={<Preloader />}>\r\n                <WrappedComponent {...props} />\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n","import { InferActionsTypes } from './redux-store';\r\nimport { getAuthUserData } from \"./auth-reducer\"\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/SET-INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// export const initializingSuccess = (): InitialSuccessActionType => ({\r\n//     type: INITIALIZED_SUCCESS\r\n// })\r\n\r\nexport const actions = {\r\n    initializingSuccess: () => ({\r\n        type: 'SN/APP/SET-INITIALIZED'\r\n    } as const)\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => { //if all promises that are in [] brackets are returned *then* we will change initializing to true\r\n        dispatch(actions.initializingSuccess())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer","let initialState = {\r\n\r\n}\r\ntype initialStateType = typeof initialState\r\n\r\nconst friendsBarReducer = (state = initialState, action: any) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default friendsBarReducer","import { combineReducers, createStore, Action } from \"redux\"\r\n\r\nimport dialogueReducer from \"./dialogue-reducer\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport friendsBarReducer from \"./friends-bar-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport { applyMiddleware } from \"redux\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\"\r\nimport { compose } from \"redux\"\r\n\r\nlet rootReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialoguesPage: dialogueReducer,\r\n    friendsBar: friendsBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\ntype rootReducerType = typeof rootReducers\r\nexport type AppStateType = ReturnType<rootReducerType>\r\nexport type BasicThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n// type PropertiesType<T> = T extends { [key: string]: infer U } ? U : never // T extends obj that has property key, then find out what is type of U\r\n\r\n// export type InferActionsTypes<T extends { [key: string]: (...arg: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nlet store = createStore(rootReducers, compose(\r\n    applyMiddleware(thunkMiddleware),\r\n    //@ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n))\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store //get store from console.log(store.getState()...)\r\n\r\nexport default store","import React from 'react'\r\nimport { connect, Provider } from 'react-redux'\r\nimport {\r\n    BrowserRouter,\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n    withRouter,\r\n    HashRouter,\r\n} from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport './App.css'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport Login from './components/Login/Login'\r\nimport MusicContainer from './components/Music/MusicContainer'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport NewsContainer from './components/News/NewsContainer'\r\nimport Settings from './components/Settings/Settings'\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport { withSuspense } from './hoc/withSuspense'\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport store, { AppStateType } from './redux/redux-store'\r\nimport { message } from 'antd'\r\n\r\nconst DialoguesContainer = React.lazy(() =>\r\n    import('./components/Dialogues/DialoguesContainer')\r\n)\r\nconst ProfileContainer = React.lazy(() =>\r\n    import('./components/Profile/ProfileContainer')\r\n)\r\n\r\nconst SuspendedDialogues = withSuspense(DialoguesContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\n\r\ntype MapPropsType = ReturnType<typeof MapStateToProps>\r\ntype DispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\r\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        message.error('Some error occured')\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Social-Network'\r\n        this.props.initializeApp()\r\n        window.addEventListener(\r\n            'unhandledrejection',\r\n            this.catchAllUnhandledErrors\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            'unhandledrejection',\r\n            this.catchAllUnhandledErrors\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        } else {\r\n            return (\r\n                <div className=\"app-wrapper\">\r\n                    <HeaderContainer />\r\n                    <Navbar />\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/profile/:UserId?\"\r\n                                render={() => <SuspendedProfile />}\r\n                            />\r\n                            <Route\r\n                                path=\"/dialogues\"\r\n                                render={() => <SuspendedDialogues />}\r\n                            />\r\n                            <Route\r\n                                path=\"/news\"\r\n                                render={() => <NewsContainer />}\r\n                            />\r\n                            <Route\r\n                                path=\"/music\"\r\n                                render={() => <MusicContainer />}\r\n                            />\r\n                            <Route\r\n                                path=\"/settings\"\r\n                                render={() => <Settings />}\r\n                            />\r\n                            <Route\r\n                                path=\"/users\"\r\n                                render={() => <UsersContainer />}\r\n                            />\r\n                            <Route path=\"/login\" render={() => <Login />} />\r\n                            <Route\r\n                                exact\r\n                                path=\"/\"\r\n                                render={() => <Redirect to=\"/profile\" />}\r\n                            />\r\n                            <Route\r\n                                path=\"*\"\r\n                                render={() => (\r\n                                    <div className=\"notFoundPage\">\r\n                                        <h1>404</h1>\r\n                                        <h3>Page not found</h3>\r\n                                    </div>\r\n                                )}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(MapStateToProps, { initializeApp })\r\n)(App)\r\n\r\nconst SocialApp: React.FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default SocialApp\r\n","import * as serviceWorker from './serviceWorker'\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport SocialApp from \"./App\"\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n\r\n    <SocialApp />\r\n    , document.getElementById('root'))\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()","import { FieldValidatorType } from '../../../utils/validators/validators'\r\nimport React from 'react'\r\nimport s from './FormsControl.module.css'\r\nimport { Field, WrappedFieldProps, WrappedFieldMetaProps } from 'redux-form'\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({\r\n    meta: { touched, error },\r\n    children,\r\n}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    placeholder: string | undefined,\r\n    name: FormKeysType,\r\n    validators: Array<FieldValidatorType>,\r\n    component: React.FC<WrappedFieldProps>,\r\n    props?: {},\r\n    text?: string\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                component={component}\r\n                className={s.input}\r\n                validate={validators}\r\n                {...props}\r\n            />\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>\r\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/giphy.gif'\r\n\r\ntype PropsType = {}\r\n\r\nlet Preloader: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.preCont}>\r\n            <img src={preloader} className={s.pre} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3SIH-\",\"error\":\"FormsControl_error__1pbcI\",\"formSummaryError\":\"FormsControl_formSummaryError__L67C3\"};","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../redux/redux-store'\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>\r\n    ({\r\n        isAuth: state.auth.isAuth,\r\n    } as MapPropsType)\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {}\r\n\r\nexport function withAuthRedirect<WCP>(\r\n    WrappedComponent: React.ComponentType<WCP>\r\n) {\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (\r\n        props\r\n    ) => {\r\n        let { isAuth, ...restProps } = props\r\n\r\n        if (!isAuth) return <Redirect to=\"/login\" />\r\n\r\n        return <WrappedComponent {...(restProps as WCP)} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<\r\n        MapPropsType,\r\n        DispatchPropsType,\r\n        WCP,\r\n        AppStateType\r\n    >(\r\n        mapStateToPropsForRedirect,\r\n        {}\r\n    )(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__36NqA\",\"loginBlock\":\"Header_loginBlock__3KzqO\",\"login\":\"Header_login__ZyVn2\",\"logout\":\"Header_logout__27a0M\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (!value) {\r\n        return 'No empty fields accepted'\r\n    }\r\n    return undefined\r\n}\r\n\r\nexport const MaxLenghtCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\nexport const MinLenghtCreator = (minLength: number): FieldValidatorType => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`\r\n    return undefined\r\n}\r\n"],"sourceRoot":""}