{"version":3,"sources":["components/Dialogues/Dialogues.module.css","components/Dialogues/AddMessageForm/AddMessageForm.tsx","components/Dialogues/DialogueItem/DialogueItem.tsx","components/Dialogues/Message/Message.tsx","components/Dialogues/Dialogues.tsx","components/Dialogues/DialoguesContainer.tsx"],"names":["module","exports","dialogues","dialoguesItem","dialoguesItemActive","tbCont","maxLength50","MaxLenghtCreator","reduxForm","form","props","react_default","a","createElement","onSubmit","handleSubmit","createField","required","Textarea","DialoguesItem","path","id","className","s","dialogue","active","NavLink","activeClassName","to","name","Message","message","Dialogues","state","dialoguesPage","dArr","dialoguesData","map","d","DialogueItem","key","messagesArr","messagesData","m","Dialogues_Message_Message","dialoguesItems","messages","Dialogues_AddMessageForm_AddMessageForm","values","sendMessage","newMassageBody","compose","connect","actions","createMessage","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,cAAA,iCAAAC,oBAAA,uCAAAC,OAAA,kICQZC,EAAcC,YAAiB,IAwBtBC,cAA8B,CAAEC,KAAM,2BAAtCD,CAlBiF,SAACE,GAC7F,OACIC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,cAClBJ,EAAAC,EAAAC,cAAA,WACKG,YACG,qBACA,iBACA,CAACC,IAAUX,GACXY,MAGRP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qDCFDM,EAhB4B,SAACT,GACxC,IAAIU,EAAO,cAAgBV,EAAMW,GAEjC,OACIV,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,SAAW,IAAMD,IAAEE,QACjCd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACIC,gBAAiBJ,IAAEnB,oBACnBwB,GAAIR,EACJE,UAAWC,IAAEpB,eAEZO,EAAMmB,QCRRC,EAJsB,SAACpB,GAClC,OAAOC,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,IAAEQ,SAAUrB,EAAMqB,UCoC9BC,EA5B2B,SAACtB,GACvC,IAAIuB,EAAQvB,EAAMwB,cAEdC,EAAOF,EAAMG,cAAcC,IAAI,SAACC,GAAD,OAC/B3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAeV,KAAMS,EAAET,KAAMW,IAAKF,EAAEjB,GAAIA,GAAIiB,EAAEjB,OAG9CoB,EAAcR,EAAMS,aAAaL,IAAI,SAACM,GAAD,OACrChC,EAAAC,EAAAC,cAAC+B,EAAD,CAASb,QAASY,EAAEZ,QAASS,IAAKG,EAAEtB,OAOxC,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,IAAErB,WACdS,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,IAAEsB,gBAAiBV,GACnCxB,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,IAAEuB,UACdnC,EAAAC,EAAAC,cAAA,WAAM4B,GACN9B,EAAAC,EAAAC,cAACkC,EAAD,CAAgBjC,SAVZ,SAACkC,GACjBtC,EAAMuC,YAAYD,EAAOE,sCCflBC,sBACXC,YAPkB,SAACnB,GACnB,MAAO,CACHC,cAAeD,EAAMC,gBAKA,CAAEe,YAAaI,IAAQC,gBAChDC,IAFWJ,CAGbnB","file":"static/js/1.d58f69c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"Dialogues_dialogues__17aMY\",\"dialoguesItem\":\"Dialogues_dialoguesItem__2xMu9\",\"dialoguesItemActive\":\"Dialogues_dialoguesItemActive__3pAMV\",\"tbCont\":\"Dialogues_tbCont__3QdXm\"};","import React from 'react'\r\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form'\r\nimport { Textarea, createField } from '../../common/FormsControls/FormsControls'\r\nimport {\r\n    MaxLenghtCreator,\r\n    required,\r\n} from '../../../utils/validators/validators'\r\nimport { NewMessageFormType } from '../Dialogues'\r\n\r\nconst maxLength50 = MaxLenghtCreator(50)\r\n\r\ntype NewMessageFormKeysValueType = Extract<keyof NewMessageFormType, string>\r\n\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, PropsType> & PropsType>  = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<NewMessageFormKeysValueType>(\r\n                    'Enter your message',\r\n                    'newMassageBody',\r\n                    [required, maxLength50],\r\n                    Textarea\r\n                )}\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<NewMessageFormType>({ form: 'dialog-add-message-form' })(AddMessageForm)\r\n","import React from 'react'\r\nimport s from './../Dialogues.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialoguesItem: React.FC<PropsType> = (props) => {\r\n    let path = '/dialogues/' + props.id\r\n\r\n    return (\r\n        <div className={s.dialogue + ' ' + s.active}>\r\n            <NavLink\r\n                activeClassName={s.dialoguesItemActive}\r\n                to={path}\r\n                className={s.dialoguesItem}\r\n            >\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialoguesItem\r\n","import React from 'react'\r\nimport s from './../Dialogues.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { InitialStateType } from '../../redux/dialogue-reducer'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\nimport DialoguesItem from './DialogueItem/DialogueItem'\r\nimport s from './Dialogues.module.css'\r\nimport Message from './Message/Message'\r\n\r\ntype OwnPropsType = {\r\n    dialoguesPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nexport type NewMessageFormType = {\r\n    newMassageBody: string\r\n}\r\n\r\nconst Dialogues: React.FC<OwnPropsType> = (props) => {\r\n    let state = props.dialoguesPage\r\n\r\n    let dArr = state.dialoguesData.map((d) => (\r\n        <DialoguesItem name={d.name} key={d.id} id={d.id} />\r\n    ))\r\n\r\n    let messagesArr = state.messagesData.map((m) => (\r\n        <Message message={m.message} key={m.id} />\r\n    ))\r\n\r\n    let addNewMessage = (values: NewMessageFormType) => {\r\n        props.sendMessage(values.newMassageBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogues}>\r\n                <div className={s.dialoguesItems}>{dArr}</div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesArr}</div>\r\n                    <AddMessageForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogues\r\n","import { connect } from 'react-redux'\r\nimport { actions } from '../../redux/dialogue-reducer'\r\nimport Dialogues from './Dialogues'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialoguesPage: state.dialoguesPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { sendMessage: actions.createMessage }),\r\n    withAuthRedirect\r\n)(Dialogues)\r\n"],"sourceRoot":""}